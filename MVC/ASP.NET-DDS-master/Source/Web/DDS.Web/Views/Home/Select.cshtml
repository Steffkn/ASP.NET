@model DDS.Web.ViewModels.Home.TestViewModel

@{
    ViewBag.Title = "SelectView";
}

<h2>SelectView</h2>

@using (Html.BeginForm("Select", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="alert alert-danger">
        @ViewBag.ModelState
        <br />
        @ViewBag.Message
    </div>
    <div class="form-horizontal">
        <div class="form-group col-md-10">
            @Html.EditorFor(model => model.Id)
        </div>
        <div class="form-group col-md-10">
            @Html.EditorFor(model => model.Title)
        </div>

        <div class="form-group col-md-10">
            @Html.ListBoxFor(model => model.SelectedTags,
                                new SelectList(Model.Tags, dataValueField: "Id", dataTextField: "Name"),
                                htmlAttributes: new { @class = "form-control", @multiple = "multiple" })
        </div>

        <div class="form-group col-md-10">
            @Html.DropDownListFor(model => model.SelectedTags, Enumerable.Empty<SelectListItem>(),
                            htmlAttributes: new { @class = "form-control", multiple = "multiple", @id="tagSelector"})
        </div>

        <div class="form-group col-md-10">
            @Url.Action(actionName: "GetTags", controllerName: "Home")
        </div>
        <div class="form-group col-md-10">
            @Html.ActionLink("tags", actionName: "GetTags", controllerName: "Home")
        </div>

        <div class="form-group col-md-10">
            <div class="col-md-offset-1">
                <input type="submit" value="Избери" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section scripts{
    <script type="text/javascript">

        window.onload = function () {
            $(document).ready(function () {
                var pageSize = 20;
                var optionListUrl = '@Url.Action("GetAllTags", "Home")';

                //Method which is to be called for populating options in dropdown //dynamically
                $('#tagSelector').select2(
                {
                    ajax: {
                        delay: 150,
                        url: optionListUrl,
                        dataType: 'json',
                        data: function (params) {
                            params.page = params.page || 1;
                            return {
                                searchTerm: params.term,
                                pageSize: pageSize,
                                pageNumber: params.page
                            };
                        },

                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            return {
                                results: data.Results,
                                pagination: {
                                    more: (params.page * pageSize) < data.Total
                                }
                            };
                        }
                    },
                    placeholder: "-- Select --",
                    minimumInputLength: 0,
                    allowClear: true,
                });
            });
        }
    </script>
}
